name: Python package

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ] # Trigger on version tags
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install mypy pytest pytest-asyncio build # Added 'build'
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Type check with mypy
      run: |
        mypy .
    - name: Test with pytest
      run: |
        pytest
    - name: Update version in pyproject.toml
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        PACKAGE_VERSION=$(echo "${{ github.ref }}" | sed 's/refs\/tags\/v//')
        echo "Updating pyproject.toml with version: $PACKAGE_VERSION"
        sed -i "s/^version = \".*\"/version = \"$PACKAGE_VERSION\"/" pyproject.toml
        cat pyproject.toml # For debugging, to see the updated file
    - name: Build distribution packages
      run: |
        python -m build
    - name: Upload distribution packages
      uses: actions/upload-artifact@v4 # Updated to v4
      with:
        name: python-packages
        path: dist/
